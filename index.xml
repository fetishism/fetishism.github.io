<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>💜 Welcome to Amethyst! on</title><link>https://fetishism.github.io/</link><description>Recent content in 💜 Welcome to Amethyst! on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://fetishism.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://fetishism.github.io/devops/tekton/introducton/concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/devops/tekton/introducton/concept/</guid><description>Tekton的概念模型 # Tekton的主要功能是实现持续集成和交付部署。Tekton Pipeline是其核心组件，其他组件都是建立在Tekton Pipeline之上的。
Step、Task和Pipeline # Step（步骤）是CI/CD工作流中最小的基础操作单元。Tekton通过在Step中定义的容器镜像执行每个Step。它可以实现各种需求，如编译代码后制作成镜像并推送到镜像仓库，再把相应的程序镜像发布到Kubernetes集群中，这些实施细节都需要在Step中定义。
Task（任务）是由Step组成的集合。Tekton中会以Kubernetes Pod的形式运行Task，而Task中的每个Step都将作为Kubernetes集群Pod中的一个容器运行。此种设计模式允许同一个Task中的众多Step共享相应的资源，例如，Pod中的各容器可以访问在Pod级别定义的存储卷。
Pipeline（流水线）是Task的集合，可以按特定的执行顺序定义Task。每个Task都将作为Kubernetes集群上的一个Pod运行。为了使各Task共同协作实现持续集成，Pipeline提供了如任务重试、排序控制等功能。
如下所示，Pipeline中引用了Task A、Task B、Task C、Task D，因为Pipeline中各Task默认为并发执行，无法满足后一个Task依赖前一个Task结果的需求，所以使用排序功能定义各Task的执行顺序。首先由Task A运行，当Task A运行结束后，Task B和Task C并发运行。待Task B和Task C运行结束后Task D运行。我们还可以观察到，每个Task中的Step都是按定义的顺序在执行。如果想调整Task中Step的运行顺序，只能在Task中重新对Step进行排序。
2 输入与输出资源 # 每个Task和Pipeline可能都有自己的输入和输出，在Tekton中称为输入和输出资源。例如，定义一个Task，此Task主要完成代码从编译到镜像的创建，这时可以将Git存储库作为输入，容器镜像作为输出。如下所示，该任务从存储库克隆源代码，然后运行一些测试，最后将源代码构建为可执行的容器镜像。
Tekton支持多种不同类型的资源，以下列出主要的资源类型。
·Git：Git存储库。
·Pull Request：Git存储库中的特定请求。
·Image：容器镜像。
·Cluster：为Tekton所在集群以外的Kubernetes集群提供访问。
·Storage：Blob存储中的对象或目录，例如Google云存储。
·CloudEvent：定义事件数据的规范。
3 TaskRun与PipelineRun # TaskRun可以在集群上实例化和执行Task。在Pipeline之外通过单独运行TaskRun来执行Task，并且通过TaskRun查看Task中每个Step执行的细节。PipelineRun可以在集群上实例化和执行Pipeline。通过PipelineRun的运行状态查看每个Task的详细信息和运行情况。
TaskRun和PipelineRun把资源与Task和Pipeline对象串联起来，通过运行TaskRun和PipelineRun来完成一次CI/CD的工作流。
创建TaskRun和PipelineRun有多种方式，可以通过手动创建、在Dashboard上创建或通过触发器触发自动创建等方式完成，如下所示。
4 Tekton的运作方式 # 总体来说，Tekton Pipeline的核心功能是打包每个步骤。其中，Tekton Pipeline会在Step容器中注入一个二进制文件，将其作为入口点。当系统准备就绪时，将执行指定的命令。
Tekton Pipeline使用Kubernetes注释来跟踪Pipeline的状态。这些注释通过Kubernetes Downward API以文件的形式投射到每个Step容器中。该入口点的二进制文件密切关注投射的文件，只有在特定注释显示为文件时才会启动命令。例如，当要求Tekton在一个Task中连续运行两个Step时，注入第二个Step容器中的入口点的二进制文件将闲置等待，直到注释报告第一个Step容器成功完成。
此外，Tekton Pipeline会安排一些容器在Step容器之前和之后自动运行，以支持特定的内置功能，例如检索输入资源和将输出加载到存储库。你也可以通过TaskRun和PipelineRun跟踪它们的运行状态。在运行Step容器之前，系统还会执行许多其他操作来设置环境。</description></item><item><title/><link>https://fetishism.github.io/devops/tekton/introducton/getting_starte/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/devops/tekton/introducton/getting_starte/</guid><description>Tekton应用CI/CD配置 # 下面的Pipeline配置中使用了镜像标签自动生成、代码构建和镜像推送、应用镜像部署三个任务。也可以根据各自持续集成和交付的需求添加诸如代码质量检查、自动化测试等任务，不断完善持续集成和交付系统。
Java语言配置示例 # 通过Maven工具构建Java代码。为了提高构建效率，需要为Maven本地仓库配置持久存储，否则会导致每次运行Maven都需要远程下载依赖包。
在Tekton的最佳实践中，鼓励对Task的重用，这样可以减少维护功能重复的Task。下面的镜像标签自动生成与应用镜像部署任务可以在其他Pipeline中重用。
基于Java代码的CI/CD配置示例如下：
# 为Maven本地仓库配置持久存储，容量大小根据Maven本地存储库大小而定 apiVersion: v1 kind: PersistentVolumeClaim metadata: name: maven-repo-local spec: accessModes: - &amp;#34;ReadWriteOnce&amp;#34; resources: requests: storage: &amp;#34;20Gi&amp;#34; --- # 配置Git仓库地址和分支 apiVersion: tekton.dev/v1alpha1 kind: PipelineResource metadata: name: git-resource-helloworld-java-spring spec: type: git params: - name: url value: https://github.com/knativebook/helloworld-java-spring.git - name: revision value: master --- # 配置镜像地址（镜像标签不用配置，创建时自动生成） apiVersion: tekton.dev/v1alpha1 kind: PipelineResource metadata: name: image-resource-helloworld-java-spring spec: type: image params: - name: url value: docker.</description></item><item><title>Setup</title><link>https://fetishism.github.io/setup/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/setup/</guid><description>Getting Started # Setting up Amethyst requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!
Forking # A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.
Navigate to the GitHub repository for the Amethyst project:
📁 Amethyst Repository
Then, Fork the repository into your own GitHub account.</description></item><item><title>Editing Content</title><link>https://fetishism.github.io/setup/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/editing/</guid><description>Editing # Amethyst runs on top of Hugo so all notes are written in Markdown.
Folder Structure # Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.
All notes you want to publish should go in the /content folder. To make edits, you can open any of the files and make changes directly and save it. You can organize content into any subfolder you&amp;rsquo;d like.
To edit the main home page, open /content/_index.</description></item><item><title>Obsidian Vault Integration</title><link>https://fetishism.github.io/setup/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/obsidian/</guid><description>Setup # Obsidian is the preferred way to use Amethyst. You can either create a new Obsidian Vault or link one that your already have.
New Vault # If you don&amp;rsquo;t have an existing Vault, download Obsidian and create a new Vault in the /content folder that you created and cloned during the setup step.
Linking an existing Vault (simple) # The easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the /content folder.</description></item><item><title>Preview Changes</title><link>https://fetishism.github.io/setup/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.
Install hugo-obsidian # This step will generate the list of backlinks for Hugo to parse. Ensure you have Go (&amp;gt;= 1.16) installed.
# Install and link `hugo-obsidian` locally go install github.com/jackyzha0/hugo-obsidian@latest If you are running into an error saying that command not found: hugo-obsidian, make sure you set your GOPATH correctly!</description></item><item><title>Awesome Go</title><link>https://fetishism.github.io/golang/awesome-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/golang/awesome-go/</guid><description>Awesome Go #
We use the Golang Bridge community Slack for instant communication, follow the form here to join.
Awesome Go has no monthly fee, but we have employees who work hard to keep it running. With money raised, we can repay the effort of each person involved! You can see how we calculate our billing and distribution as it is open to the entire community.</description></item><item><title>With ToC</title><link>https://fetishism.github.io/example/table-of-contents/with-toc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/example/table-of-contents/with-toc/</guid><description>Caput vino delphine in tamen vias # Cognita laeva illo fracta # Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.
Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere # Pectora et sine mulcere, coniuge dum tincta incurvae.</description></item><item><title>Without ToC</title><link>https://fetishism.github.io/example/table-of-contents/without-toc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/example/table-of-contents/without-toc/</guid><description>At me ipso nepotibus nunc celebratior genus # Tanto oblite # Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.
Quam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque.</description></item><item><title/><link>https://fetishism.github.io/example/collapsed/3rd-level/4th-level/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/example/collapsed/3rd-level/4th-level/</guid><description>4th Level of Menu # Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.
Venasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto!</description></item><item><title/><link>https://fetishism.github.io/example/hidden/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/example/hidden/</guid><description>This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.
Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem.</description></item><item><title/><link>https://fetishism.github.io/features/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/buttons/</guid><description>Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://fetishism.github.io/features/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis!</description></item><item><title/><link>https://fetishism.github.io/features/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/details/</guid><description>Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} {{&amp;lt; details title=&amp;#34;Title&amp;#34; open=true &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://fetishism.github.io/features/expand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/expand/</guid><description>Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.
Example # Default # {{&amp;lt; expand &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Expand ↕ Markdown content # Lorem markdownum insigne&amp;hellip; With Custom Label # {{&amp;lt; expand &amp;#34;Custom Label&amp;#34; &amp;#34;...&amp;#34; &amp;gt;}} ## Markdown content Lorem markdownum insigne.</description></item><item><title/><link>https://fetishism.github.io/features/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt;/* mermaid [class=&amp;#34;text-center&amp;#34;]*/&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://fetishism.github.io/features/section/first-page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/section/first-page/</guid><description>First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title/><link>https://fetishism.github.io/features/section/second-page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/section/second-page/</guid><description>Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title/><link>https://fetishism.github.io/features/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item><item><title>Callouts</title><link>https://fetishism.github.io/features/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/callouts/</guid><description>Callout support # Amethyst supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.
Showcase # [!EXAMPLE] Examples
Aliases: example
[!note] Notes
Aliases: note
[!abstract] Summaries
Aliases: abstract, summary, tldr
[!info] Info
Aliases: info, todo
[!tip] Hint
Aliases: tip, hint, important</description></item><item><title>Chinese, Japanese, Korean Support (测试)</title><link>https://fetishism.github.io/features/languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/languages/</guid><description>Chinese, Japanese, Korean Support # 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
RTL # More information on configuring RTL languages like Arabic in the config page.</description></item><item><title>Custom Domain</title><link>https://fetishism.github.io/setup/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/custom-Domain/</guid><description>Registrar # This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.
For this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).
GitHub has some documentation on this, but the tldr; is to
Go to your forked repository (github.</description></item><item><title>Customization</title><link>https://fetishism.github.io/setup/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/config/</guid><description>Configuration # Amethyst is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.
The majority of configuration can be found under config.yaml. An example, with descriptions for each setting, can be found here.
Code Block Titles # To add code block titles with Amethyst:
Ensure that code block titles are enabled in the configuration:</description></item><item><title>Deploying Amethyst to the Web</title><link>https://fetishism.github.io/setup/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/hosting/</guid><description>Hosting on GitHub Pages # Amethyst is designed to be effortless to deploy. If you forked and cloned Amethyst directly from the repository, everything should already be good to go! Follow the steps below.
Enable GitHub Actions # By default, GitHub disables workflows from running automatically on Forked Repostories. Head to the &amp;lsquo;Actions&amp;rsquo; tab of your forked repository and Enable Workflows to setup deploying your site!
Enable GitHub Actions</description></item><item><title>Ignoring Notes</title><link>https://fetishism.github.io/setup/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/ignore-notes/</guid><description>Edit ignoreFiles in config.yaml to include paths you&amp;rsquo;d like to exclude from being rendered.
... ignoreFiles: [ &amp;#34;/content/templates/*&amp;#34;, &amp;#34;/content/private/*&amp;#34;, &amp;#34;&amp;lt;your path here&amp;gt;&amp;#34; ] ignoreFiles supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all .pngs by doing \\.png$). To ignore a specific file, you can also add the tag draft: true to the frontmatter of a note.
--- title: Some Private Note draft: true --- .</description></item><item><title>LaTeX</title><link>https://fetishism.github.io/features/latex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/features/latex/</guid><description>Block math works with two dollar signs $$...$$
$$f(x) = \int_{-\infty}^\infty f\hat(\xi),e^{2 \pi i \xi x} ,d\xi$$
Inline math also works with single dollar signs $...$. For example, Euler&amp;rsquo;s identity but inline: $e^{i\pi} = -1$
Aligned equations work quite well:
$$ \begin{aligned} a &amp;amp;= b + c \ &amp;amp;= e + f \ \end{aligned} $$
And matrices
$$ \begin{bmatrix} 1 &amp;amp; 2 &amp;amp; 3 \ a &amp;amp; b &amp;amp; c \end{bmatrix} $$</description></item><item><title>Search</title><link>https://fetishism.github.io/setup/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/search/</guid><description>Amethyst supports two modes of searching through content.
Full-text # Full-text search is the default in Amethyst. It produces results that exactly match the search query. This is easier to setup but usually produces lower quality matches.
# the default option enableSemanticSearch: false Natural Language # Natural language search is powered by Operand. It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.</description></item><item><title>Troubleshooting and FAQ</title><link>https://fetishism.github.io/setup/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Amethyst.
Does Amethyst have Latex support? # Yes! See LaTeX for a brief demo.
Can I use &amp;lt;Obsidian Plugin&amp;gt; in Amethyst? # Unless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Amethyst.
The easiest way would be to add your own HTML partial that supports the functionality you are looking for.</description></item><item><title>Updating</title><link>https://fetishism.github.io/setup/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fetishism.github.io/setup/updating/</guid><description>Haven&amp;rsquo;t updated Amethyst in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press q to acknowledge this. Then, it will show you each change in turn and press y to accept the patch or n to reject it. Usually you should press y for most of these unless it conflicts with existing changes you&amp;rsquo;ve made!</description></item></channel></rss>